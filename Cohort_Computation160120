#setwd("/Users/stephenzeek/Documents/HS Analytics/Cohorting/Cohorting_Data")
####This Script picks up the data from "Cohort_Data_Pull" and does the actual computations####

####Make Cohorts - Week# and Year
dateRange <- tr_archive$Created
x <- as.POSIXlt(dateRange) 
tr_archive$Cohort <- as.numeric(strftime(x,format="%W")) + 1
tr_archive$Cohort <- sprintf("%02d",tr_archive$Cohort)
tr_archive$year <- as.numeric(substr(tr_archive$Created,3,4))
tr_archive$Cohort <- paste(tr_archive$Cohort,tr_archive$year, sep = "")



#####Merge with Conversions####
#####create clean conversion dataset#####
conv <- data.frame(co_archive$Company.ID,co_archive$Company.Name,co_archive$Created.On,co_archive$Deal.Closed,
                   co_archive$Days_to_Close,co_archive$Prepaid.Revenue,co_archive$LTV)
conv <- data.table(conv)
setnames(conv,names(conv),c("Company.ID","Company.Name","Created","Deal.Closed","Days_to_Close","Prepaid.Revenue","LTV"))
conv[,Company.ID := as.numeric(conv[,Company.ID])]
conv <-unique(conv)

####merge######
test <- merge(tr_archive,conv, by = c("Company.ID","Company.Name","Created"), all.x = T)
####Flag Conversions#####
test$convert <- ifelse(!is.na(test$Deal.Closed),1,0)
###Compute Pre-Paid Applied and clean NAs
test$pre_applied <- round(test$Prepaid.Revenue/53,2)
test$pre_applied[is.na(test$pre_applied)] <- 0

rm(zen,hpy,frs,hot,ts,asdf,dsada,uv,dsk,tsup,grv)

####Read in Paid Search Data from GA Table####
ga <- read.csv("first_touch_raw_160115.csv")
ga$X.1 <- NULL
ga$X <- NULL

#####Merge with Trial Data
### This gives trial dataset w/First & Last Touch attrib. 
trial_st <- merge(test,ga, by = c("Company.ID","Company.Name"), all.x = TRUE)
trial_st$hga_medium_first <-toupper(trial_st$hga_medium_first)
trial_st$hga_medium <-toupper(trial_st$hga_medium)
trial_st <- data.table(trial_st)
trial_st$Primary.Vertical <- NULL
trial_st$hga_id <- NULL
trial_st$hga_com_id <- NULL
trial_st$hga_content <- NULL
trial_st <- unique(trial_st)
trial_st$Month <- substr(trial_st$Created,6,7)
trial_st$Prepaid.Revenue[is.na(trial_st$Prepaid.Revenue)] <- 0

####Deal with first/last touch problem to get at paid channel###
####This takes out cannibalization by saying if first OR last is a growth channel, call the growth channel by name in $channel
trial_st$channel <- ifelse(trial_st$hga_source_first == "getapp" | trial_st$hga_source == "getapp","getapp",
                           ifelse(trial_st$hga_source_first == "capterra" | trial_st$hga_source == "capterra","capterra",
                                  ifelse(trial_st$hga_source_first == "ppc" | trial_st$hga_source == "ppc","ppc",
                                         ifelse(trial_st$hga_source_first == "ppc-re" | trial_st$hga_source == "ppc-re","ppc-re",
                                                ifelse(trial_st$hga_source_first == "ppc-tm" | trial_st$hga_source == "ppc-tm","ppc-tm",
                                                       ifelse(trial_st$hga_source_first == "twitter" | trial_st$hga_source == "twitter","twitter","Other_Trials"))))))
trial_st$channel[is.na(trial_st$channel)] <- 0

###Active Trials####
trial_st$Active_TR <- ifelse(trial_st$Account.Status == "Active Trial",1,0)

#Onboarded Trials - Acct Status = "Active Trial",15+ replies sent & closed date == NA
trial_st$Onboard <- ifelse(trial_st$Account.Status == "Active Trial" & trial_st$X..Replies >= 15 & is.na(trial_st$Deal.Closed),1,0)

####Make NAs in Days to Close 0 
na.zero <- function (x) {
  x[is.na(x)] <- 0
  return(x)
}

trial_st$Days_to_Close <- na.zero(trial_st$Days_to_Close)
trial_st$Days_to_Close <- as.numeric(trial_st$Days_to_Close)
trial_st$LTV[is.na(trial_st$LTV)] <- 0

###Flag Churns
trial_st$Churn <- ifelse(trial_st$Company.ID %in% ch_archive$Company.ID, 1,0)
####create new df to bring in prepaid revenue for churn -> calculate Churn ARPC
ch_pre <- data.frame(trial_st$Cohort,trial_st$Company.ID,trial_st$Company.Name,trial_st$pre_applied)
setnames(ch_pre,names(ch_pre),c("Cohort","Company.ID","Company.Name","Pre_Applied"))
ch_archive <- merge(ch_archive,ch_pre, by = "Company.ID")
ch_agg <- ch_archive[,list(ChurnARPC = round((sum(Last.Payment.Amt)+sum(Pre_Applied))/length(ch_archive))),by = "Cohort"]

####Flag Active Free Users####
trial_st$free_user <- ifelse(trial_st$Funnel.Stage == "Free Plan Conversion" & trial_st$convert == 0 & trial_st$Account.Status != "Inactive Free",1,0)

###Flag < 15 and >15 <30 day conversion#####
trial_st$fift <- ifelse(trial_st$Days_to_Close > 0 & trial_st$Days_to_Close <= 15 & trial_st$convert == 1,1,0)
trial_st$thirt <- ifelse(trial_st$Days_to_Close > 15 & trial_st$Days_to_Close <= 30,1,0)

#####Flag Paying Customers#####
trial_st$pay_cust <- ifelse(trial_st$Account.Status == "Paying Customer" & !is.na(trial_st$Deal.Closed)
                      & trial_st$LTV >0,1,0)

####Report by Cohort######
deals_agg <- trial_st[,list(Trials = (length(Created)), Converts = sum(convert),CR = round(sum(convert)/length(Created),3),
                            CloseDays = round(sum(Days_to_Close)/sum(convert)),
                            ARPC = round((sum(Last.Payment.Amt)+sum(pre_applied))/sum(convert),2),ActTrials = sum(Active_TR), 
                            OnbTrials = sum(Onboard),OnbPerc = round(sum(Onboard)/length(Created),3),Churns = sum(Churn), 
                            FreeUsrs = sum(free_user),FreeCR = round(sum(free_user)/length(Created),3),
                            TrialConv = round(sum(fift)/sum(convert),3),ExTrialConv = round(sum(thirt)/sum(convert),3),
                            LTV = sum(LTV),preappltv = (sum(pre_applied)*52),AdjLTV = round(sum(LTV) - (sum(pre_applied)*52)),
                            Pay_Cust = sum(pay_cust)),by = Cohort]

#####Create Aggregation by Channel and Cohort
chan_agg <- trial_st[,list(Trials = (length(Created)), Converts = sum(convert),CR = round(sum(convert)/length(Created),3),
                           CloseDays = round(sum(Days_to_Close)/sum(convert)),
                           ARPC = round((sum(Last.Payment.Amt)+sum(pre_applied))/sum(convert),2),ActTrials = sum(Active_TR),
                           OnbTrials = sum(Onboard),Churns = sum(Churn),
                           AdjLTV = round(sum(LTV) - (sum(pre_applied)*52))), by = c("Cohort","channel")]

chan_agg[is.na(chan_agg)] <- 0

#######Aggregation by Month#####
month_agg <- trial_st[,list(Trials = (length(Created)), Converts = sum(convert),CR = round(sum(convert)/length(Created),3),
                            CloseDays = round(sum(Days_to_Close)/sum(convert)),
                            ARPC = round((sum(Last.Payment.Amt)+sum(pre_applied))/sum(convert),2),ActTrials = sum(Active_TR), 
                            OnbTrials = sum(Onboard),OnbPerc = round(sum(Onboard)/length(Created),3),Churns = sum(Churn), 
                            FreeUsrs = sum(free_user),FreeCR = round(sum(free_user)/length(Created),3),
                            TrialConv = round(sum(fift)/sum(convert),3),ExTrialConv = round(sum(thirt)/sum(convert),3),
                            LTV = sum(LTV),preappltv = (sum(pre_applied)*52),AdjLTV = round(sum(LTV) - (sum(pre_applied)*52)),
                            Pay_Cust = sum(pay_cust)),by = Month]

####Aggregate Traffic Data and Join with Deals Agg on Cohort####
traffic_agg <- ga_archive[,list(Uniques = sum(Uniques),Evaluators = sum(Evaluators),Readers = sum(Readers)),
                                by = Cohort]
deals_agg <- merge(deals_agg,traffic_agg, by = "Cohort", all.x = T)

###Merge deals_agg & ch_agg on Cohort to bring in ChurnARPC
deals_agg <- merge(deals_agg,ch_agg, by = "Cohort", all.x = T)
deals_agg$ChurnARPC[is.na(deals_agg$ChurnARPC)] <- 0
deals_agg$AdjARPC <- (deals_agg$ARPC - deals_agg$ChurnARPC)

####Logic for Ordering by Cohort and by Year######
deals_agg$Year <- substr(deals_agg$Cohort,3,4)
deals_agg <- deals_agg[order(Year),]
